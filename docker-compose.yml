---

version: "3"

services:

  jupyter:
    build: ./src/docker/docker-jupyter-sql
    ports:
      - "$SANDBOX_JUPYTER_PORT:8888"
    networks:
      - frontend
      - backend
    environment:
      PGHOST: postgis
      PGPORT: 5432
      PGDATABASE: "$SANDBOX_POSTGRES_DBNAME"
      PGUSER: "$SANDBOX_POSTGRES_USERNAME"
      PGPASSWORD: "$SANDBOX_POSTGRES_PASSWORD"
      # Configuration for ipython-sql
      DATABASE_URL: "postgresql://postgres:$SANDBOX_POSTGRES_MASTER_PASSWORD@postgis/postgres"
    links:
      - postgis
    depends_on:
      - postgis
    volumes:
      - data-volume:/data
      # - $SANDBOX_DATASET_DIR:/data/datasets:ro

  neo4j:
    image: neo4j:4.0
    ports:
      - "7474:7474"
      - "7687:7687"
    networks:
      - frontend
    volumes:
      - data-volume:/data

  postgis:
    # Use an alpine image which includes `shp2pgsql` command
    image: postgis/postgis:12-3.0-alpine
    ports:
      - "$SANDBOX_POSTGRES_PORT:5432"
    networks:
      - backend
    environment:
      POSTGRES_PASSWORD: "$SANDBOX_POSTGRES_MASTER_PASSWORD"
    volumes:
      - data-volume:/data
      - ./etc:/data/etc:ro
      - $SANDBOX_DATASET_DIR:/data/datasets:ro

volumes:
  data-volume:

networks:
  frontend:
  backend:
