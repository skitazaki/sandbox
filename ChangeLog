2011-05-06: yaml2config.py,config.yaml
	* YAML の設定ファイルから指定されたセクションを抜き出す。

2011-05-01: encoding_sample.py
	* Python で標準出力をリダイレクトした場合のエンコーディングを確認する。

2011-04-29: profiler_sample.py
	* Python のプロファイラモジュールを使ってみる。

2011-03-16: conv-jleague-stadium-name.hs
	* CSV のフィールドの文字列を書き換える。

2011-03-14: d106.py
	* J リーグのクラブ名を変換する。

2011-03-13: cat.hs
	* Haskell で cat コマンド。

2011-03-12: d104.py,d104.J1.txt,d104.J2.txt
	* J リーグの日程表を CSV に変換する。

2011-03-11: d103.py
	* Twisted の dbapi を使ってみる。

2011-02-22: d102.py,d102.csv
	* CSV の予定を iCalendar に変換する。

2011-02-16: simple-usage-jqueryui-datepicker.js,simple-usage-jqueryui-datepicker.html
	* jQueryUI の DatePicker のサンプル。

2011-02-15: simple-usage-datajs.js,simple-usage-datajs.html,simple-usage-datajs.atom
	* datajs を使って OData のサンプル。

2011-02-14: http-server.py
	* テスト用の静的コンテンツ配信 HTTP サーバ。

2011-02-07: d99.py
	* Selenium を使ってユニットテストとスクリーンキャプチャ。

2011-02-03: hello.hs
	* Haskell で Hello world 。

2011-02-01: d97.py
	* BeautifulSoup を使って HTML をパースする。

2011-01-26: remove-pyc-files.sh
	* .pyc ファイルを掃除する。

2011-01-20: d95.py,d95.0.html,d95.1.html,d95.2.html
	* jinja2 の extends を使ってみる。

2011-01-09: d94.py,d94.0.txt,d94.1.txt [facebook hackers cup]
	* Peg Game を表示する。

2011-01-09: d93.py [facebook hackers cup]
	* Double Square を解く。

2011-01-07: d92.py [project]
	* virtualenv+buildout で開発環境を構築する。

2011-01-07: svncounts-commits-per-user.sh
	* SVN のコミット数をユーザーごとに集計する。

2010-12-24: d90.py,d90.tpl
	* reST を HTML に変換するときに自前のテンプレートを使う。

2010-12-23: d89.py
	* Twitter の search API を使ってみる。

2010-12-22: build-mysql55.sh
	* MySQL-5.5 系をソースからビルドする。

2010-12-21: python-httpd.sh
	* Python に付属する HTTP サーバモジュールを実行する。

2010-12-12: move-images-in-downloaded-html.sh
	* HTML をダウンロードしたときの画像ファイルをコピーする。

2010-12-10: python-checker.sh
	* pep8 と nosetests を bash でまとめて実行させる。

2010-12-06: d84.py
	* Twitter の user_timeline から JSON を取得する。

2010-12-06: d83.py
	* Python で Selenium を操作してみる。

2010-12-05: d82.py
	* `pymongo` で MongoDB に接続してみる。

2010-11-28: d81.py
	* `twisted.web.html` を使ってみる。

2010-11-25: d80.py
	* Twisted で WSGI アプリケーションを動かす。

2010-11-16: simple-usage-jquery-hover.html,simple-usage-jquery-hover.js
	* jQuery でアンカータグを扱う。

2010-11-15: simple-usage-curl.c
	* C 言語で cURL を使ってみる。

2010-11-14: find-biggest-files.sh
	* 指定したディレクトリ配下にある大きなファイルを10個まで表示する。

2010-11-11: d76.py
	* Wikipedia のダンプデータ (abstract) を処理する。

2010-11-06: remove-deadlinks.sh
	* 壊れているシンボリックリンクを削除する。

2010-10-25: d74.py [project]
	* Adobe AIR SDK のプロジェクトを生成する。

2010-10-23: d73.py,d73.html,d73.txt
	* `jinja2` で if 文と for 文を使ってみる。

2010-10-16: d72.py,d72.json
	* `MySQLdb` の接続情報を JSON から取得する。 (see d61.py)

2010-10-15: toggle-contents.html
	* JavaScript でタイトルをクリックすると本文が開閉する処理を実装してみる。

2010-10-14: d70.py
	* use `nose` for simple test.

2010-10-11: socket-client.c
	* ソケット通信用のクライアントを実装してみる。

2010-10-09: cause-memory-leak-pthread.c
	* スレッドに join しないことでメモリリークを発生させる。
		use pthread and raise memory leak not to call `pthread_join`

2010-10-08: twitlet.js
	* Web ページのタイトルと URL を Twitter にポストするブックマークレット。

2010-10-06: d66.py
	* Twitter の Public API を使って tweet を表示する。
		fetch tweets via public API.

2010-10-04: simple-usage-gdbm-key-value.c
	* `gdbm` を使って簡単な key/value を使う。

2010-10-03: d64.py [project]
	* HTML5 boiler plate をダウンロードして `src` に展開する。
		downloader of HTML5 boiler plate.

2010-09-29: d63.py
	* Tornado を使って JSON でデータを返す。
		HTTP server using ``Tornado``.

2010-08-31: d62.py
	* Twisted の spawnProcess を使ってみる。

2010-08-19: d61.py
	* `MySQLdb` を使ってみる。

2010-07-20: color-console-with-curses.cpp
	* コンソールに色を付ける。(requires curses.h)

2010-07-13: newprj-html5widget.sh
	* HTML5 Widget 用のプロジェクトを作る。

2010-07-05: simple-usage-sqlite.sh
	* SQLite を使ってみる。

2010-07-03: ant-xml2html.xml
	* Ant の xslt タスクで XML を HTML に変換する。

2010-07-01: d56.py
	* HTTPServer の代わりに twisted.web を使う。

2010-06-29: d55.py,d55.html
	* HTTPServer を使って JSONP でデータを送る。

2010-06-28: simple-usage-sqlite.php
	* SQLite を使ってみる。

2010-06-27: simple-usage-worker.js,simple-usage-worker.html
	* Worker を触ってみる。

2010-06-25: d52.py
	* `zope.interface` モジュールを使う。

2010-06-25: d51.py
	* ループ処理を計測する。

2010-06-19: d50.py
	* `inspect` モジュールを使う。

2010-06-18: newprj-autotools.sh
	* autotools でプロジェクトを作成する。

2010-06-17: loop-test.js,loop-test.html,loop-test.css
	* Duff's Device の考えでループ処理を実行する。

2010-06-13: d47.py
	* `doctest` モジュールを使う。

2010-06-12: blogger-feed.js,blogger-feed.html,blogger-feed.css
	* Blogger のフィードを JSONP を使って表示する。

2010-06-10: xml2html.xsl,xml2html.xml,xml2html.css
	* XSLT で XML を HTML に整形する。

2010-06-09: slideshow.html
	* JSON の画像情報でスライドショーをする。 (requires jQuery)

2010-06-08: d43.py
	* 画像の情報を JSON 形式で出力する。

2010-06-07: eval-input-text.html
	* textarea に入力したスクリプトを eval する。 (requires jQuery)

2010-06-06: simple-usage-canvas.html
	* Canvas 要素を使ってみる。

2010-05-31: simple-usage-function-ptr.cpp
	* 関数ポインタを使ってみる。

2010-05-30: color-console.cpp
	* コンソールに色づけする。

2010-05-25: d38.py
	* iCalendar を hCalendar に変換してみる。

2010-05-24: d37.py
	* ReportLab で表を生成する。

2010-05-22: d36.py
	* CSV から HTML の <ul> と <table> を作る。 (use d32.csv)

2010-05-21: d35.py
	* SQLite を使ってみる。

2010-05-18: d34.py,d34.csv
	* 差し込み印刷のように PDF を生成する。

2010-05-17: d33.py,d33.ics
	* iCalendar から指定した期間のイベントを抽出する。

2010-05-10: d32.py,d32.csv
	* CSV ファイルから Web サイト用のメニューを作る。

2010-05-06: patch-split.sh
	* パッチファイルを分割する。

2010-05-05: d30.py
	* 一週間分の tweet を表示する。

2010-05-01: d29.py
	* Google Spreadsheets のファイル一覧を取得する。

2010-04-29: d28.py
	* 拡張子ごとのファイル数を集計する。

2010-04-26: d27.py,d27.yaml
	* YAML を JSON に変換する。

2010-04-25: d26.py
	* 空のディレクトリ (隠しファイルひとつのものも含む) を削除する。

2010-04-22: build-python-mysqldb.sh [setup]
	* MySQLdb をインストールする。

2010-04-21: d24.py
	* Google Data API のクライアントライブラリでログインする。

2010-04-20: d23.py,d23.json
	* Gmail のラベル一覧と INBOX の中身一覧を取得する。設定ファイル必要。

2010-04-19: setup-python-modules.sh [setup]
	* PyYAML と ssl モジュールをインストールする。

2010-04-18: url-shortener.sh
	* "goo.gl" で URL を短縮する。

2010-04-16: svncounts-one-month-commits.sh
	* Subversion の直近一ヶ月のコミッタごとのコミット数を表示する。

2010-04-15: setup-macosx-java-version.sh [setup]
	* MacOSX の Java のバージョンを変更する。

2010-04-14: setup-sshkey.sh
	* ssh のクライアント側の設定をする。

2010-04-13: d17.py
	* タブを空白４つに変換して末尾の空白文字を取り除く。

2010-04-12: setup-gitconfig.sh [setup]
	* git を設定する。

2010-04-08: d15.py
	* サムネイル画像を作成する。

2010-04-06: d14.py
	* 画像の大きさを表示する。

2010-04-05: build-python-pil.sh [setup]
	* PIL をインストールする。
		Install PIL, Python Image Library.

2010-04-03: build-mariadb.sh [setup]
	* MariaDB をソースからビルドする。

2010-03-30: rfc-page-split.sh
	* RFC をページごとに分割する。
		Split RFC texts page by page

2010-03-29: svnadd-unversioned-files.sh
	* Subversion で管理されていないファイルを追加する。
		Add un-versioned files into subversion realm

2010-03-38: d09.py,d09.txt
	* ReportLab を使って PDF を生成する。
		Generate pdf file containing Japanese with "ReportLab".

2010-03-27: build-python-reportlab.sh [setup]
	* ReportLab をインストールする。

2010-03-26: d07.py [setup]
	* Python の sitecustomize.py を置く。
		Put "sitecustomize.py".

2010-03-25: build-php.sh [setup]
	* PHP をソースからビルドする。

2010-03-24: build-python.sh [setup]
	* Python をソースからビルドする。

2010-03-23: extract-archive.sh
	* tar か unzip でアーカイブを展開する。

2010-03-22: gdata-weather.sh
	* Google Data Protocol で天気予報を取得して表示する。
		http://gauc.no-ip.org/awk-users-jp/blis.cgi/DoukakuAWK_263

2010-03-19: hand-made-ical.sh,simple-calendar.csv
	* 引数で指定した CSV ファイルから iCalendar 形式のデータを生成する。

2010-03-18: count-files-in-pathenv.sh
	* パスの通っているディレクトリごとのファイル数を表示する。
